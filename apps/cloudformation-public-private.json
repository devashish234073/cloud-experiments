{
    "Resources": {
      "cfVPC": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": "10.0.0.0/16",
          "EnableDnsSupport": "true",
          "EnableDnsHostnames": "true"
        }
      },
      "cfSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          },
          "CidrBlock": "10.0.1.0/24",
          "MapPublicIpOnLaunch": true,
          "AvailabilityZone": "ap-south-1a"
        }
      },
      "cfSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          },
          "CidrBlock": "10.0.9.0/24",
          "MapPublicIpOnLaunch": true,
          "AvailabilityZone": "ap-south-1b"
        }
      },
      "logInteractionEc2": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": "ami-03f4878755434977f",
          "InstanceType": "t2.micro",
          "KeyName": "kp1",
          "UserData": {
            "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "apt update -y\n",
                    "apt install git -y\n",
                    "apt install nodejs -y\n",
                    "node -v\n",
                    "git clone https://github.com/devashish234073/cloud-experiments\n",
                    "cd cloud-experiments/apps\n",
                    "node apiInteraction.js PORT=8988&\n"
                  ]
                ]
            }
          },
          "Tags": [{
            "Key": "Name",
            "Value": "logInteractionEc2"
          }],
          "NetworkInterfaces": [
            {
              "DeviceIndex": "0",
              "PrivateIpAddress": "10.0.1.10",
              "AssociatePublicIpAddress": "true",
              "DeleteOnTermination": "true",
              "SubnetId": {
                "Ref": "cfSubnet1"
              },
              "GroupSet": [
                {
                  "Ref": "PublicSecurityGroup"
                }
              ]
            }
          ]
        }
      },
      "dbEc2": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": "ami-03f4878755434977f",
          "InstanceType": "t2.micro",
          "KeyName": "kp1",
          "UserData": {
            "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "apt update -y\n",
                    "apt install git -y\n",
                    "apt install nodejs -y\n",
                    "node -v\n",
                    "git clone https://github.com/devashish234073/cloud-experiments\n",
                    "cd cloud-experiments/apps\n",
                    "node db.js PORT=8989&\n"
                  ]
                ]
              }
          },
          "Tags": [{
            "Key": "Name",
            "Value": "dbEc2"
          }],
          "NetworkInterfaces": [
            {
              "DeviceIndex": "0",
              "PrivateIpAddress": "10.0.9.11",
              "AssociatePublicIpAddress": "false",
              "DeleteOnTermination": "true",
              "SubnetId": {
                "Ref": "cfSubnet2"
              },
              "GroupSet": [
                {
                  "Ref": "PrivateSecurityGroup"
                }
              ]
            }
          ]
        }
      },
      "registerServiceEC2": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": "ami-03f4878755434977f",
          "InstanceType": "t2.micro",
          "KeyName": "kp1",
          "UserData": {
            "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "apt update -y\n",
                    "apt install git -y\n",
                    "apt install nodejs -y\n",
                    "node -v\n",
                    "git clone https://github.com/devashish234073/cloud-experiments\n",
                    "cd cloud-experiments/apps\n",
                    "node registerService.js dbUrl=http://10.0.9.11:8989 PORT=7777 interactionServer=http://10.0.1.10:8988&\n"
                  ]
                ]
            }
          },
          "Tags": [{
            "Key": "Name",
            "Value": "registerServiceEC2"
          }],
          "NetworkInterfaces": [
            {
              "DeviceIndex": "0",
              "PrivateIpAddress": "10.0.9.12",
              "AssociatePublicIpAddress": "false",
              "DeleteOnTermination": "true",
              "SubnetId": {
                "Ref": "cfSubnet2"
              },
              "GroupSet": [
                {
                  "Ref": "PrivateSecurityGroup"
                }
              ]
            }
          ]
        }
      },
      "searchServiceEC2": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": "ami-03f4878755434977f",
          "InstanceType": "t2.micro",
          "KeyName": "kp1",
          "UserData": {
            "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "apt update -y\n",
                    "apt install git -y\n",
                    "apt install nodejs -y\n",
                    "node -v\n",
                    "git clone https://github.com/devashish234073/cloud-experiments\n",
                    "cd cloud-experiments/apps\n",
                    "node searchService.js dbUrl=http://10.0.9.11:8989 PORT=7778 interactionServer=http://10.0.1.10:8988&\n"
                  ]
                ]
            }
          },
          "Tags": [{
            "Key": "Name",
            "Value": "searchServiceEC2"
          }],
          "NetworkInterfaces": [
            {
              "DeviceIndex": "0",
              "PrivateIpAddress": "10.0.9.13",
              "AssociatePublicIpAddress": "false",
              "DeleteOnTermination": "true",
              "SubnetId": {
                "Ref": "cfSubnet2"
              },
              "GroupSet": [
                {
                  "Ref": "PrivateSecurityGroup"
                }
              ]
            }
          ]
        }
      },
      "uiEC2": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "ImageId": "ami-03f4878755434977f",
          "InstanceType": "t2.micro",
          "KeyName": "kp1",
          "UserData": {
            "Fn::Base64": {
                "Fn::Join": [
                  "",
                  [
                    "#!/bin/bash\n",
                    "apt update -y\n",
                    "apt install git -y\n",
                    "apt install nodejs -y\n",
                    "node -v\n",
                    "git clone https://github.com/devashish234073/cloud-experiments\n",
                    "cd cloud-experiments/apps\n",
                    "node ui.js registerServiceUrl=http://10.0.9.12:7777 searchServiceUrl=http://10.0.9.13:7778 PORT=8995 interactionServer=http://10.0.1.10:8988&\n"
                  ]
                ]
            }
          },
          "Tags": [{
            "Key": "Name",
            "Value": "uiEC2"
          }],
          "NetworkInterfaces": [
            {
              "DeviceIndex": "0",
              "PrivateIpAddress": "10.0.1.14",
              "AssociatePublicIpAddress": "true",
              "DeleteOnTermination": "true",
              "SubnetId": {
                "Ref": "cfSubnet1"
              },
              "GroupSet": [
                {
                  "Ref": "PublicSecurityGroup"
                }
              ]
            }
          ]
        }
      },
      "PublicSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          },
          "GroupDescription": "Allow SSH and HTTP traffic",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 22,
              "ToPort": 22,
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": 8988,
              "ToPort": 8988,
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": 8995,
              "ToPort": 8995,
              "CidrIp": "0.0.0.0/0"
            }
          ],
          "SecurityGroupEgress": [
            {
              "IpProtocol": "-1",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "PrivateSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          },
          "GroupDescription": "Allow SSH and HTTP traffic",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 22,
              "ToPort": 22,
              "CidrIp": "0.0.0.0/0"
            },
            {
              "IpProtocol": "tcp",
              "FromPort": 8988,
              "ToPort": 8988,
              "SourceSecurityGroupId": { "Ref": "PublicSecurityGroup" }
            },
            {
              "IpProtocol": "tcp",
              "FromPort": 7777,
              "ToPort": 7777,
              "SourceSecurityGroupId": { "Ref": "PublicSecurityGroup" }
            },
            {
              "IpProtocol": "tcp",
              "FromPort": 7778,
              "ToPort": 7778,
              "SourceSecurityGroupId": { "Ref": "PublicSecurityGroup" }
            }
          ],
          "SecurityGroupEgress": [
            {
              "IpProtocol": "-1",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "MyInternetGateway": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {}
      },
      "GatewayAttachment": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          },
          "InternetGatewayId": {
            "Ref": "MyInternetGateway"
          }
        }
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          }
        }
      },
      "PublicRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": "GatewayAttachment",
        "Properties": {
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "MyInternetGateway"
          }
        }
      },
      "PublicSubnet1RouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "cfSubnet1"
          },
          "RouteTableId": {
            "Ref": "PublicRouteTable"
          }
        }
      },
      "NATGateway" : {
        "Type" : "AWS::EC2::NatGateway",
        "Properties" : {
           "AllocationId" : { 
               "Fn::GetAtt" : ["NATGatewayEIP", "AllocationId"] 
           },
           "SubnetId" : { 
               "Ref" : "cfSubnet1" 
           },
           "Tags" : [ 
               {"Key" : "stack", "Value" : "dev" } 
           ]
          }
     },
     "NATGatewayEIP" : {
        "Type" : "AWS::EC2::EIP",
        "Properties" : {
           "Domain" : "vpc"
        }
     },
     "RouteNATGateway" : {
        "DependsOn": [ "GatewayAttachment","NATGateway" ],
        "Type" : "AWS::EC2::Route",
        "Properties" : {
           "RouteTableId" : { "Ref" : "PrivateRouteTable" },
           "DestinationCidrBlock" : "0.0.0.0/0",
           "NatGatewayId" : { "Ref" : "NATGateway" }
        }
      },
      "PrivateRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          }
        }
      },
      "PrivateRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": "GatewayAttachment",
        "Properties": {
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          },
          "DestinationCidrBlock": "10.0.1.0/24",
          "InstanceId": {
            "Ref": "searchServiceEC2"
          }
        }
      },
      "PrivateSubnet2RouteTableAssociation": {
        "Type": "AWS::EC2::SubnetRouteTableAssociation",
        "Properties": {
          "SubnetId": {
            "Ref": "cfSubnet2"
          },
          "RouteTableId": {
            "Ref": "PrivateRouteTable"
          }
        }
      },
      "MyNetworkAcl": {
        "Type": "AWS::EC2::NetworkAcl",
        "Properties": {
          "VpcId": {
            "Ref": "cfVPC"
          }
        }
      },
      "MyNetworkAclEntryIngress1": {
        "Type": "AWS::EC2::NetworkAclEntry",
        "Properties": {
          "NetworkAclId": {
            "Ref": "MyNetworkAcl"
          },
          "RuleNumber": 100,
          "Protocol": "6",
          "RuleAction": "allow",
          "CidrBlock": "0.0.0.0/0",
          "Egress": false,
          "PortRange": {
            "From": 22,
            "To": 22
          }
        }
      },
      "MyNetworkAclEntryEgress1": {
        "Type": "AWS::EC2::NetworkAclEntry",
        "Properties": {
          "NetworkAclId": {
            "Ref": "MyNetworkAcl"
          },
          "RuleNumber": 100,
          "Protocol": "6",
          "RuleAction": "allow",
          "CidrBlock": "0.0.0.0/0",
          "Egress": true,
          "PortRange": {
            "From": 22,
            "To": 22
          }
        }
      }
    }
  }